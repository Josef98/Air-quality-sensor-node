#line 1 "bst_driver\\bma2x2_support.c"


















































 

 
 
 
#line 1 "bst_driver\\bma2x2.h"





















































 


 


 
 
 






 




 
#line 92 "bst_driver\\bma2x2.h"



 
#line 222 "bst_driver\\bma2x2.h"




 



 
#line 259 "bst_driver\\bma2x2.h"
 
typedef	signed char  s8; 
typedef	signed short int s16; 
typedef	signed int s32; 
typedef	signed long long int s64; 

 
typedef	unsigned char u8; 
typedef	unsigned short int u16; 
typedef	unsigned int u32; 
typedef	unsigned long long int u64; 


 
#line 292 "bst_driver\\bma2x2.h"

 
 
 

















 























 





















 


 


























 








 
 
 










 







 



 
 
 



	 





	 




	 
#line 450 "bst_driver\\bma2x2.h"

 
 
 





 
 
 

 

 
 
 




 
#line 480 "bst_driver\\bma2x2.h"
 





 
#line 493 "bst_driver\\bma2x2.h"
 
#line 503 "bst_driver\\bma2x2.h"
 
#line 521 "bst_driver\\bma2x2.h"
 





 


 




 
 
 




 
 
 
 



 
 
 


 
struct bma2x2_accel_data {
s16 x, 
y, 
z; 
};



 
struct bma2x2_accel_data_temp {
s16 x, 
y, 
z; 
s8 temp; 
};



 
struct  bma2x2_accel_eight_resolution {
s8 x, 
y, 
z; 
};


 
struct bma2x2_accel_eight_resolution_temp {
s8 x, 
y, 
z; 
s8 temp; 
};











 
struct bma2x2_t {
u8 power_mode_u8; 
u8 chip_id; 
u8 ctrl_mode_reg; 
u8 low_mode_reg; 
u8 dev_addr; 
u8 fifo_config; 
s8(*bus_write)(u8, u8, u8 *, u8); 
s8(*bus_read)(u8, u8, u8 *, u8); 
s8(*burst_read)(u8, u8, u8 *, u32); 
void (*delay_msec)(u32);

 
};

 
 
 
 
 
 





 
 
 





























 
 
 





























 
 
 






























 
 
 





 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 



















 
 
 



















 
 
 



















 
 
 




 
 
 





 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 

 
 
 














 
 
 




 
 
 




 
 
 




 
 
 




 
 
 














 
 
 




 
 
 




 
 
 




 
 
 




 
 
 

















 
 
 





 
 
 




 
 
 




 
 
 




 
 
 





 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 





 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 





 
 
 




 
 
 




 
 
 



















 
 
 




 
 
 




 
 
 




 
 
 





 
 
 




 
 
 




 
 
 





 
 
 





 
 
 





 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 





 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 




 
 
 









 
 
 




 
 
 




 
 
 




 
 
 




 
 
 














 
 
 




 
 
 




 
 
 




 
 
 




 
 
 














 
 
 




 
 
 





 
 
 







 
 
 
 
 
 
 

 

 

 

 

 
 
 

 

 

 
 
 

 

 

 
 
 

 

 

 
 
 

 

 

 

 

 

 
 
 

 

 

 

 



  

 

 

  

  

 

 

  

 
 
 

 

 

 

 

 

 

 

 

 

 

 

 
 
 

 

 

 

  

  

  

  

  

  

  

  

  

 

 

  

 

 
 
 
#line 1776 "bst_driver\\bma2x2.h"

 
 
 

 

 

 

 
 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 
 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 

 
 
 
#line 1876 "bst_driver\\bma2x2.h"






 
 
 





 
 
 














 
 
 



 
 
 




 
 
 


 
 
 




 
 
 






 
 






 
 
 




 
 
 




 
 
 


 
 
 
#line 1979 "bst_driver\\bma2x2.h"
 
 
 


 
 
 


 
 
 



 
 
 




#line 2009 "bst_driver\\bma2x2.h"





#line 2021 "bst_driver\\bma2x2.h"






 







 







 







 








 


 
 
 
 
 
 
















 
s8 bma2x2_burst_read(u8 addr_u8,
u8 *data_u8, u32 len_u32);
 
 
 






















 
s8 bma2x2_init(struct bma2x2_t *bma2x2);

















 
s8 bma2x2_write_reg(u8 adr_u8,
u8 *data_u8, u8 len_u8);
















 
s8 bma2x2_read_reg(u8 adr_u8,
u8 *data_u8, u8 len_u8);
 
 
 



















 
s8 bma2x2_read_accel_x(s16 *accel_x_s16);















 
s8 bma2x2_read_accel_eight_resolution_x(
s8 *accel_x_s8);


















 
s8 bma2x2_read_accel_y(s16 *accel_y_s16);
















 
s8 bma2x2_read_accel_eight_resolution_y(
s8 *accel_y_s8);


















 
s8 bma2x2_read_accel_z(s16 *accel_z_s16);
















 
s8 bma2x2_read_accel_eight_resolution_z(
s8 *accel_z_s8);
















 
s8 bma2x2_read_accel_xyz(
struct bma2x2_accel_data *accel);

















 
s8 bma2x2_read_accel_eight_resolution_xyz(
struct bma2x2_accel_eight_resolution *accel);
 
 
 














 
s8 bma2x2_get_intr_tap_stat(
u8 *stat_tap_u8);














 
s8 bma2x2_get_intr_orient_stat(
u8 *stat_orient_u8);













 
s8 bma2x2_get_fifo_stat(
u8 *stat_fifo_u8);














 
s8 bma2x2_get_fifo_frame_count(
u8 *frame_count_u8);














 
s8 bma2x2_get_fifo_overrun(
u8 *fifo_overrun_u8);
 
 
 















 
s8 bma2x2_get_intr_stat(
u8 *intr_stat_u8);




















 
s8 bma2x2_get_range(u8 *range_u8);




















 
s8 bma2x2_set_range(u8 range_u8);
 
 
 
























 
s8 bma2x2_get_bw(u8 *bw_u8);
























 
s8 bma2x2_set_bw(u8 bw_u8);
 
 
 
























 
s8 bma2x2_get_power_mode(
u8 *power_mode_u8);
























 
s8 bma2x2_set_power_mode(u8 power_mode_u8);
























 
s8 bma2x2_set_mode_value(u8 power_mode_u8);
 
 
 






























 
s8 bma2x2_get_sleep_durn(u8 *sleep_durn_u8);






























 
s8 bma2x2_set_sleep_durn(u8 sleep_durn_u8);



















 
s8 bma2x2_get_sleep_timer_mode(
u8 *sleep_timer_u8);



















 
s8 bma2x2_set_sleep_timer_mode(u8 sleep_timer_u8);
 
 
 
















 
s8 bma2x2_get_high_bw(u8 *high_bw_u8);
















 
s8 bma2x2_set_high_bw(u8 high_bw_u8);

















 
s8 bma2x2_get_shadow_dis(u8 *shadow_dis_u8);

















 
s8 bma2x2_set_shadow_dis(u8 shadow_dis_u8);
 
 
 












 
s8 bma2x2_soft_rst(void);















 
s8 bma2x2_update_image(void);
 
 
 











































 
s8 bma2x2_get_intr_enable(u8 intr_type_u8,
u8 *value_u8);











































 
s8 bma2x2_set_intr_enable(u8 intr_type_u8,
u8 value_u8);



















 
s8 bma2x2_get_intr_fifo_full(u8 *fifo_full_u8);



















 
s8 bma2x2_set_intr_fifo_full(u8 fifo_full_u8);





















 
s8 bma2x2_get_intr_fifo_wm(u8 *fifo_wm_u8);





















 
s8 bma2x2_set_intr_fifo_wm(u8 fifo_wm_u8);



























 
s8 bma2x2_get_slow_no_motion(u8 channel_u8,
u8 *slow_no_motion_u8);


























 
s8 bma2x2_set_slow_no_motion(u8 channel_u8,
u8 slow_no_motion_u8);




























 
s8 bma2x2_get_intr_low_g(u8 channel_u8,
u8 *intr_low_g_u8);




























 
s8 bma2x2_set_intr_low_g(u8 channel_u8,
u8 intr_low_u8);

























 
s8 bma2x2_get_intr_high_g(u8 channel_u8,
u8 *intr_high_g_u8);

























 
s8 bma2x2_set_intr_high_g(u8 channel_u8,
u8 intr_high_g_u8);



























 
s8 bma2x2_get_intr_slope(u8 channel_u8,
u8 *intr_slope_u8);



























 
s8 bma2x2_set_intr_slope(u8 channel_u8,
u8 intr_slope_u8);




























 
s8 bma2x2_get_intr_slow_no_motion(u8 channel_u8,
u8 *intr_slow_no_motion_u8);




























 
s8 bma2x2_set_intr_slow_no_motion(u8 channel_u8,
u8 intr_slow_no_motion_u8);



























 
s8 bma2x2_get_intr_double_tap(u8 channel_u8,
u8 *intr_double_tap_u8);



























 
s8 bma2x2_set_intr_double_tap(u8 channel_u8,
u8 intr_double_tap_u8);


























 
s8 bma2x2_get_intr_single_tap(u8 channel_u8,
u8 *intr_single_tap_u8);


























 
s8 bma2x2_set_intr_single_tap(u8 channel_u8,
u8 intr_single_tap_u8);

























 
s8 bma2x2_get_intr_orient(u8 channel_u8,
u8 *intr_orient_u8);

























 
s8 bma2x2_set_intr_orient(u8 channel_u8,
u8 intr_orient_u8);



























 
s8 bma2x2_get_intr_flat(u8 channel_u8,
u8 *intr_flat_u8);



























 
s8 bma2x2_set_intr_flat(u8 channel_u8,
u8 intr_flat_u8);


























 
s8 bma2x2_get_new_data(u8 channel_u8,
u8 *intr_newdata_u8);


























 
s8 bma2x2_set_new_data(u8 channel_u8,
u8 intr_newdata_u8);
 
 
 

















 
s8 bma2x2_get_intr1_fifo_wm(u8 *intr1_fifo_wm_u8);

















 
s8 bma2x2_set_intr1_fifo_wm(u8 intr1_fifo_wm_u8);

















 
s8 bma2x2_get_intr2_fifo_wm(u8 *intr2_fifo_wm_u8);

















 
s8 bma2x2_set_intr2_fifo_wm(u8 intr2_fifo_wm_u8);



















 
s8 bma2x2_get_intr1_fifo_full(
u8 *intr1_fifo_full_u8);



















 
s8 bma2x2_set_intr1_fifo_full(u8 intr1_fifo_full_u8);




















 
s8 bma2x2_get_intr2_fifo_full(
u8 *intr2_fifo_full_u8);




















 
s8 bma2x2_set_intr2_fifo_full(u8 intr2_fifo_full_u8);
 
 
 




























 
s8 bma2x2_get_source(u8 channel_u8,
u8 *intr_source_u8);




























 
s8 bma2x2_set_source(u8 channel_u8,
u8 intr_source_u8);
 
 
 

























 
s8 bma2x2_get_intr_output_type(u8 channel_u8,
u8 *intr_output_type_u8);

























 
s8 bma2x2_set_intr_output_type(u8 channel_u8,
u8 intr_output_type_u8);
























 
s8 bma2x2_get_intr_level(u8 channel_u8,
u8 *intr_level_u8);
























 
s8 bma2x2_set_intr_level(u8 channel_u8,
u8 intr_level_u8);
 
 
 


















 
s8 bma2x2_rst_intr(u8 rst_intr_u8);
 
 
 































 
s8 bma2x2_get_latch_intr(u8 *latch_intr_u8);































 
s8 bma2x2_set_latch_intr(u8 latch_intr_u8);
 
 
 






































 
s8 bma2x2_get_durn(u8 channel_u8,
u8 *durn_u8);






































 
s8 bma2x2_set_durn(u8 channel_u8,
u8 durn_u8);
 
 
 



























































 
s8 bma2x2_get_thres(u8 channel_u8,
u8 *thres_u8);



























































 
s8 bma2x2_set_thres(u8 channel_u8,
u8 thres_u8);
 
 
 































 
s8 bma2x2_get_low_high_g_hyst(u8 channel_u8,
u8 *hyst_u8);































 
s8 bma2x2_set_low_high_g_hyst(u8 channel_u8,
u8 hyst_u8);
 
 
 

















 
s8 bma2x2_get_low_g_mode(u8 *low_g_mode_u8);

















 
s8 bma2x2_set_low_g_mode(u8 low_g_mode_u8);
 
 
 
























 
s8 bma2x2_get_tap_durn(u8 *tap_durn_u8);
























 
s8 bma2x2_set_tap_durn(u8 tap_durn_u8);
 
 
 


















 
s8 bma2x2_get_tap_shock(u8 *tap_shock_u8);


















 
s8 bma2x2_set_tap_shock(u8 tap_shock_u8);
 
 
 

















 
s8 bma2x2_get_tap_quiet(u8 *tap_quiet_u8);

















 
s8 bma2x2_set_tap_quiet(u8 tap_quiet_u8);
 
 
 






















 
s8 bma2x2_get_tap_thres(u8 *tap_thres_u8);






















 
s8 bma2x2_set_tap_thres(u8 tap_thres_u8);
 
 
 




















 
s8 bma2x2_get_tap_sample(u8 *tap_sample_u8);




















 
s8 bma2x2_set_tap_sample(u8 tap_sample_u8);
 
 
 





















 
s8 bma2x2_get_orient_mode(u8 *orient_mode_u8);





















 
s8 bma2x2_set_orient_mode(u8 orient_mode_u8);
 
 
 


























 
s8 bma2x2_get_orient_block(
u8 *orient_block_u8);


























 
s8 bma2x2_set_orient_block(u8 orient_block_u8);
 
 
 















 
s8 bma2x2_get_orient_hyst(u8 *orient_hyst_u8);















 
s8 bma2x2_set_orient_hyst(u8 orient_hyst_u8);
 
 
 























 
s8 bma2x2_get_theta(u8 channel_u8,
u8 *theta_u8);























 
s8 bma2x2_set_theta(u8 channel_u8,
u8 theta_u8);
 
 
 


















 
s8 bma2x2_get_orient_enable(
u8 *orient_enable_u8);


















 
s8 bma2x2_set_orient_enable(u8 orient_enable_u8);
 
 
 

















 
s8 bma2x2_get_flat_hyst(u8 *flat_hyst_u8);

















 
s8 bma2x2_set_flat_hyst(u8 flat_hyst_u8);
 
 
 





















 
s8 bma2x2_get_flat_hold_time(
u8 *flat_hold_time_u8);





















 
s8 bma2x2_set_flat_hold_time(
u8 flat_hold_time_u8);
 
 
 
















 
s8 bma2x2_get_fifo_wml_trig(
u8 *fifo_wml_trig);
















 
s8 bma2x2_set_fifo_wml_trig(
u8 fifo_wml_trig);
 
 
 




















 
s8 bma2x2_get_selftest_axis(
u8 *selftest_axis_u8);




















 
s8 bma2x2_set_selftest_axis(
u8 selftest_axis_u8);


















 
s8 bma2x2_get_selftest_sign(
u8 *selftest_sign_u8);


















 
s8 bma2x2_set_selftest_sign(
u8 selftest_sign_u8);
 
 
 
















 
s8 bma2x2_get_nvmprog_mode(
u8 *nvmprog_mode_u8);
















 
s8 bma2x2_set_nvmprog_mode(u8 nvmprog_mode_u8);



















 
s8 bma2x2_set_nvprog_trig(u8 nvprog_trig_u8);


















 
s8 bma2x2_get_nvmprog_ready(u8 *nvprog_ready_u8);


















 
s8 bma2x2_get_nvmprog_remain(u8 *nvprog_remain_u8);
 
 
 



















 
s8 bma2x2_get_spi3(u8 *spi3_u8);



















 
s8 bma2x2_set_spi3(u8 spi3_u8);






























 
s8 bma2x2_get_i2c_wdt(u8 channel_u8,
u8 *i2c_wdt_u8);






























 
s8 bma2x2_set_i2c_wdt(u8 channel_u8,
u8 i2c_wdt_u8);
 
 
 




























 
s8 bma2x2_get_slow_comp(u8 channel_u8,
u8 *slow_comp_u8);




























 
s8 bma2x2_set_slow_comp(u8 channel_u8,
u8 slow_comp_u8);

















 
s8 bma2x2_get_cal_rdy(u8 *cal_rdy_u8);

















 
s8 bma2x2_set_cal_trigger(u8 cal_trigger_u8);
















 
s8 bma2x2_set_offset_rst(u8 offset_rst_u8);





































 
s8 bma2x2_get_offset_target(u8 channel_u8,
u8 *offset_u8);





































 
s8 bma2x2_set_offset_target(u8 channel_u8,
u8 offset_u8);
























 
s8 bma2x2_get_offset(u8 channel_u8,
s8 *offset_u8);
























 
s8 bma2x2_set_offset(u8 channel_u8,
s8 offset_u8);
 
 
 




















 
s8 bma2x2_get_fifo_mode(u8 *fifo_mode_u8);




















 
s8 bma2x2_set_fifo_mode(u8 fifo_mode_u8);




















 
s8 bma2x2_get_fifo_data_select(
u8 *fifo_data_select_u8);




















 
s8 bma2x2_set_fifo_data_select(
u8 fifo_data_select_u8);














 
s8 bma2x2_get_fifo_data_output_reg(
u8 *output_reg_u8);
 
 
 















 
s8 bma2x2_read_temp(s8 *temp_s8);
 
 
 














 
s8 bma2x2_read_accel_xyzt(
struct bma2x2_accel_data_temp *accel);














 
s8 bma2x2_read_accel_eight_resolution_xyzt(
struct bma2x2_accel_eight_resolution_temp *accel);


#line 57 "bst_driver\\bma2x2_support.c"




 
#line 107 "bst_driver\\bma2x2_support.c"
 


 
void BMA2x2_delay_msek(u32 msek);




 
s32 bma2x2_data_readout_template(void);









 
struct bma2x2_t bma2x2;





 
extern u8 V_BMA2x2RESOLUTION_u8R;



 
s32 bma2x2_data_readout_template(void)
{
	 
	s16	accel_x_s16, accel_y_s16, accel_z_s16 = ((u8)0);

	 
	struct bma2x2_accel_data sample_xyz;
	
 
	struct bma2x2_accel_data_temp sample_xyzt;
	 
	u8 bw_value_u8 = ((u8)0);
	 
	u8 banwid = ((u8)0);
	 
	s32 com_rslt = ((s8)-1);




 




 






 
	com_rslt = bma2x2_init(&bma2x2);










 
	 
	com_rslt += bma2x2_set_power_mode((0));



 

 



 
	

 
	bw_value_u8 = 0x08; 
	com_rslt += bma2x2_set_bw(bw_value_u8);

	 
	com_rslt += bma2x2_get_bw(&banwid);


 


 
	 
	com_rslt += bma2x2_read_accel_x(&accel_x_s16);
	 
	com_rslt += bma2x2_read_accel_y(&accel_y_s16);
	 
	com_rslt += bma2x2_read_accel_z(&accel_z_s16);

	 
	 
	com_rslt += bma2x2_read_accel_xyz(&sample_xyz);

	 
	 
	com_rslt += bma2x2_read_accel_xyzt(&sample_xyzt);



 


 







 
  
	com_rslt += bma2x2_set_power_mode((3));


 
return com_rslt;
}

